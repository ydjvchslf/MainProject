<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.buyedu.dao.complain.ComplainDao">
 	
 	
	<resultMap id="complainSelectMap" type="complain">
		<result property="complainNo" 				column="complain_no" 			jdbcType="NUMERIC"/>
		<result property="board.boardNo" 		 	column="board_no" 				jdbcType="NUMERIC"/>
		<result property="commentNo"				column="comment_no" 			jdbcType="NUMERIC" />
		<result property="review.reviewNo"			column="review_no" 				jdbcType="NUMERIC" />
		<result property="user.userNo" 				column="complain_user_no" 		jdbcType="NUMERIC" />
		<result property="complainSort" 			column="complain_sort"		 	jdbcType="CHAR" />
		<result property="complainReasonCode" 		column="complain_reason_code" 	jdbcType="CHAR" />
		<result property="complainReason" 			column="COMPLAIN_REASON_NAME" 	jdbcType="CHAR" />
		<result property="complainDate" 			column="complain_date"		 	jdbcType="DATE" />
		<result property="complainState" 			column="complain_state"		 	jdbcType="CHAR" />
	</resultMap>
	
	<!-- SQL : INSERT  -->
	<insert 	id="addComplain" parameterType="complain" >
		INSERT
		INTO complain
		(complain_no, board_no, comment_no, review_no, complain_user_no, complain_sort, complain_reason_code, complain_date, complain_state)
		VALUES( seq_complain_complain_no.NEXTVAL
				,#{board.boardNo:NUMERIC}
				,#{commentNo:NUMERIC}
				,#{review.reviewNo:NUMERIC}
				,#{user.userNo}
				,#{complainSort}
				,#{complainReasonCode}
				,SYSDATE
				,'0')
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getComplain"	parameterType="int"	resultMap="complainSelectMap">
		SELECT
		*
		FROM complain 
		WHERE complain_no = #{complainNo}
	 </select>
	 
	<!-- SQL : SELECT LIST -->
	<select  id="getComplainList"  parameterType="search"	resultMap="complainSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT  c.complain_no, c.board_no, c.comment_no, c.review_no, c.complain_user_no, c.complain_sort, r.complain_reason_code, c.complain_date, c.complain_state, r.COMPLAIN_REASON_NAME
											FROM complain c, complain_reason r
											<where> 
											c.complain_reason_code = r.complain_reason_code
											<if test="searchCondition != null">
												<if test="searchCondition == 0 and searchKeyword !='' ">
									 				AND r.complain_reason_code = #{searchKeyword}
												</if>
											</if>
											</where>
											ORDER BY complain_no desc) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 <!-- SQL : UPDATE 신고 상태 수정 -->
	<update	id="updateComplainState"	parameterType="complain" >
	   	UPDATE complain
	   	<set>
	   		complain_state = #{complainState},
	   	</set>
	   	WHERE complain_no = #{complainNo}
	 </update>
	 
	 <select  id="getComplainNo"  parameterType="complain"	 resultType="int">
	  	SELECT complain_no
	  	FROM complain
	  	WHERE complain_user_no = #{user.userNo} AND board_no = #{board.boardNo}
	 </select>
	 
	 
	<select  id="getComplainCount"  parameterType="complain"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM complain
	  	WHERE complain_user_no = #{user.userNo} AND board_no = #{board.boardNo}
	 </select>
	 
	 <select  id="getComplainCommentCount"  parameterType="complain"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM complain
	  	WHERE complain_user_no = #{user.userNo} AND comment_no = #{commentNo}
	 </select>

	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT *
				FROM complain
				<if test="searchCondition != null">
				<where>
					<if test="searchCondition == 0 and searchKeyword !='' ">
						complain_reason_code = #{searchKeyword}
					</if>
				</where>
			  </if>) countTable						
	 </select>
	 
	 <!-- SQL : 신고 삭제 -->
	<delete 	id="deleteComplain"	parameterType="int">
		DELETE 
		FROM complain
		WHERE complain_no = #{complainNo}
	 </delete>
 
</mapper>